# Generated by Django 5.1.6 on 2025-02-27 13:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=31)),
                ("price", models.IntegerField(default=100)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="ServerConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip", models.CharField(max_length=15, unique=True)),
                ("api_key", models.CharField(max_length=63, unique=True)),
                ("api_port", models.IntegerField(default=8080)),
                ("wg_address", models.CharField(max_length=17)),
                ("wg_listen_port", models.IntegerField(default=51820)),
                ("wg_private_key", models.CharField(max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name="NexUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=63, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=63)),
                ("is_active", models.BooleanField(default=True)),
                ("auto_renew", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("end_date", models.DateField()),
                ("num", models.IntegerField()),
                ("private_key", models.CharField(max_length=63)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.nexuser"
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.server"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("uuid", models.UUIDField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "В обработке"),
                            ("succeeded", "Успешный платеж"),
                            ("canceled", "Отмененный платеж"),
                        ],
                        default="pending",
                        max_length=31,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.nexuser"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="server",
            name="config",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="nexvpn.serverconfig"
            ),
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_credit", models.BooleanField()),
                ("value", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("renew_subscription", "Продление подписки"),
                            ("reactivate_clint", "Возобновление подписки"),
                            ("invitation", "Приглашение пользователя"),
                            ("start_balance", "Стартовый баланс"),
                            ("fill_up_balance", "Пополнение баланса"),
                            ("add_device", "Добавление устройства"),
                            ("promo_code", "Применение промокода"),
                            ("updated_by_admin", "Изменено администратором"),
                        ],
                        max_length=31,
                    ),
                ),
                (
                    "payment",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nexvpn.payment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.nexuser"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserBalance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.IntegerField(default=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.nexuser"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invitee",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitation",
                        to="nexvpn.nexuser",
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.nexuser"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Endpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip", models.CharField(max_length=17)),
                (
                    "client",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="endpoint",
                        to="nexvpn.client",
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="nexvpn.server"
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("server", "ip"), name="unique_server_ip"
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="client",
            constraint=models.UniqueConstraint(
                fields=("user", "num"), name="unique_user_num"
            ),
        ),
        migrations.AddConstraint(
            model_name="userbalance",
            constraint=models.CheckConstraint(
                condition=models.Q(("value__gte", 0)), name="value_gte_0"
            ),
        ),
    ]
